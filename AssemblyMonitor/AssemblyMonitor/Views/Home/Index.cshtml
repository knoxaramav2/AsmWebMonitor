@{
    ViewData["Title"] = "Home Page";
}
<div id="config_bar">
    <select required onchange="generateRegisterUI();">
        <!--TODO: Razor render options-->
        <option>AMD64</option>
        <option>x86</option>
        <option>KCC AMD64</option>
    </select>

    <div>
        <label for="mem_size">Allocated Memory (B)</label>
        <input type="number" id="mem_size" max="512" value="256" onchange="generateMemoryUI();" />
    </div>

    <input id="file_upload" type="file"
        accept=".asm,.kcc,.s" 
        onchange="loadFile(this)"/>
    
</div>
<div>
    <div class="flex_container">
        <div class="left column site_smokey">
            <div class="column_header">
                <span>Registers</span>
            </div>
            <div class="column_container ">
                <div id="reg_area" class="maximize">

                </div>
            </div>
        </div>
        <div class="right column site_smokey">
            <div class="column_header">
                <span>ASM</span>
            </div>
            <div class="column_container">
                <textarea id="asm_area" readonly class="maximize">
                    
                </textarea>
            </div>
        </div>
    </div>
    <div>
        <label for="mem_out">Memory View</label>
        <textarea readonly id="mem_out">
            
        </textarea>
    </div>
</div>

<script>

    var config, memSize;
    var configProfiles;

    (function () {
        config = document.getElementById('config_bar');
        memSize = document.getElementById('mem_size');

        getApiResult('api/asm', configProfiles);

        generateRegisterUI();
        generateMemoryUI();
    })();

    function getApiResult(uri, setValue) {
        let xhttp = new XMLHttpRequest();

        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                setValue = this.responseText;
                console.log("Request success: " + setValue);
            }
        };

        xhttp.open("GET", uri, true);
        xhttp.send();

        console.log("Request made: " + uri);
    }

    function loadFile(input) {
        if (input.files === null) {
            alert("File upload not supported by this browser");
            return;
        }

        if (input.files[0] === null) {
            console.log("No file selected");
            return;
        }

        let f = input.files[0];
        let fileReader = new FileReader();
        var asm = document.getElementById('asm_area');

        fileReader.onload = (function (f) {
            return function (e) {
                asm.value = this.result;
            }
        })(f);

        fileReader.readAsText(f)
        }

    function generateRegisterUI() {

    }

    function generateMemoryUI() {

    }

</script>